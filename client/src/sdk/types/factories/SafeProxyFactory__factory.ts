/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  SafeProxyFactory,
  SafeProxyFactoryInterface,
} from "../SafeProxyFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract SafeProxy",
        name: "proxy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "singleton",
        type: "address",
      },
    ],
    name: "ProxyCreation",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_singleton",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "initializer",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "saltNonce",
        type: "uint256",
      },
    ],
    name: "createChainSpecificProxyWithNonce",
    outputs: [
      {
        internalType: "contract SafeProxy",
        name: "proxy",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_singleton",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "initializer",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "saltNonce",
        type: "uint256",
      },
      {
        internalType: "contract IProxyCreationCallback",
        name: "callback",
        type: "address",
      },
    ],
    name: "createProxyWithCallback",
    outputs: [
      {
        internalType: "contract SafeProxy",
        name: "proxy",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_singleton",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "initializer",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "saltNonce",
        type: "uint256",
      },
    ],
    name: "createProxyWithNonce",
    outputs: [
      {
        internalType: "contract SafeProxy",
        name: "proxy",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxyCreationCode",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610962908161001c8239f35b600080fdfe60806040526004361015610013575b600080fd5b6000803560e01c9081631688f0b91461008e5781633408e470146100715750806353e5d93514610068578063d18af54d1461005f5763ec9e80bb1461005757600080fd5b61000e6103c2565b5061000e61028f565b5061000e610247565b3461008b578060031936011261008b576020604051468152f35b80fd5b3461008b576100c26100a86100a2366101a3565b9161046c565b6040516001600160a01b0390911681529081906020820190565b0390f35b6001600160a01b0381160361000e57565b50634e487b7160e01b600052604160045260246000fd5b6001600160401b03811161010157604052565b6101096100d7565b604052565b90601f801991011681019081106001600160401b0382111761010157604052565b9061013d604051928361010e565b565b81601f8201121561000e578035906001600160401b038211610196575b60405192610174601f8401601f19166020018561010e565b8284526020838301011161000e57816000926020809301838601378301015290565b61019e6100d7565b61015c565b90606060031983011261000e576004356101bc816100c6565b91602435906001600160401b03821161000e576101db9160040161013f565b9060443590565b600091031261000e57565b918091926000905b82821061020d575011610206575050565b6000910152565b915080602091830151818601520182916101f5565b9060209161023b815180928185528580860191016101ed565b601f01601f1916010190565b503461000e57600036600319011261000e576100c261015e60405190610270602082018361010e565b8082526106716020830139604051918291602083526020830190610222565b503461000e57608036600319011261000e576004356102ad816100c6565b6024356001600160401b03811161000e576102cc90369060040161013f565b9060443591606435916102de836100c6565b61032e604051602081019061032481610316888a86909160349282526bffffffffffffffffffffffff199060601b1660208201520190565b03601f19810183528261010e565b519020838361046c565b6001600160a01b039093169384610354575b6040516001600160a01b0385168152602090f35b843b1561000e576100c2946103859360008094604051968795869485936303ca56a360e31b85528b60048601610631565b03925af180156103b5575b61039c575b8080610340565b806103a96103af926100ee565b806101e2565b38610395565b6103bd610663565b610390565b503461000e5760207f4f51faf6c4561ff95f067657e43439f0f856d97c04d9ec9070a6199ad418e235816103f5366101a3565b61044b82949295939551838601209460405192848401968752604084015246606084015260608352608083018381106001600160401b0382111761045f575b60405260018060a01b03958693519020908761055d565b1693849360405191168152a2604051908152f35b6104676100d7565b610434565b9291906104b39181516020830120906040519060208201928352604082015260408152606081018181106001600160401b038211176104f0575b604052519020908461055d565b6040516001600160a01b03938416815290928316907f4f51faf6c4561ff95f067657e43439f0f856d97c04d9ec9070a6199ad418e23590602090a2565b6104f86100d7565b6104a6565b60209291906105138492828151948592016101ed565b019081520190565b1561052257565b60405162461bcd60e51b815260206004820152601360248201527210dc99585d194c8818d85b1b0819985a5b1959606a1b6044820152606490fd5b929190833b156105ec576105cc6105aa926105b861015e6105806020820161012f565b908082526107cf60208301396040516001600160a01b03989096879290918a1690602084016104fd565b03601f19810186528561010e565b835160009460200185f5948516151561051b565b805190816105d957505050565b8291602083920182875af11561008b5750565b60405162461bcd60e51b815260206004820152601f60248201527f53696e676c65746f6e20636f6e7472616374206e6f74206465706c6f796564006044820152606490fd5b94939261065e9160609360018060a01b038092168852166020870152608060408701526080860190610222565b930152565b506040513d6000823e3d90fdfe6080346100c957601f61015e38819003918201601f19168301916001600160401b038311848410176100ce578084926020946040528339810103126100c957516001600160a01b038116908190036100c957801561007957600080546001600160a01b031916919091179055604051607990816100e58239f35b60405162461bcd60e51b815260206004820152602260248201527f496e76616c69642073696e676c65746f6e20616464726573732070726f766964604482015261195960f21b6064820152608490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600080546001600160a01b031690803563530ca43760e11b14603c57808092368280378136915af43d82803e156038573d90f35b3d90fd5b6020918152f3fea2646970667358221220a2fa717a7e39a5257c651df69f62fa272de134a37d622e0874f428ea25d26d0064736f6c634300080f00336080346100c957601f61015e38819003918201601f19168301916001600160401b038311848410176100ce578084926020946040528339810103126100c957516001600160a01b038116908190036100c957801561007957600080546001600160a01b031916919091179055604051607990816100e58239f35b60405162461bcd60e51b815260206004820152602260248201527f496e76616c69642073696e676c65746f6e20616464726573732070726f766964604482015261195960f21b6064820152608490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600080546001600160a01b031690803563530ca43760e11b14603c57808092368280378136915af43d82803e156038573d90f35b3d90fd5b6020918152f3fea2646970667358221220a2fa717a7e39a5257c651df69f62fa272de134a37d622e0874f428ea25d26d0064736f6c634300080f0033a2646970667358221220df4f12def268b0a756e1a2f6a996710a9dabcd053eb5b1b0f4483b926983d47364736f6c634300080f0033";

type SafeProxyFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SafeProxyFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SafeProxyFactory__factory extends ContractFactory {
  constructor(...args: SafeProxyFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SafeProxyFactory> {
    return super.deploy(overrides || {}) as Promise<SafeProxyFactory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SafeProxyFactory {
    return super.attach(address) as SafeProxyFactory;
  }
  override connect(signer: Signer): SafeProxyFactory__factory {
    return super.connect(signer) as SafeProxyFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SafeProxyFactoryInterface {
    return new utils.Interface(_abi) as SafeProxyFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SafeProxyFactory {
    return new Contract(address, _abi, signerOrProvider) as SafeProxyFactory;
  }
}
