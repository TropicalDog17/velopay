/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  BananaAccountProxyFactory,
  BananaAccountProxyFactoryInterface,
} from "../BananaAccountProxyFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract BananaAccountProxy",
        name: "proxy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "singleton",
        type: "address",
      },
    ],
    name: "ProxyCreation",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_singleton",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "initializer",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "saltNonce",
        type: "uint256",
      },
    ],
    name: "createChainSpecificProxyWithNonce",
    outputs: [
      {
        internalType: "contract BananaAccountProxy",
        name: "proxy",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_singleton",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "initializer",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "saltNonce",
        type: "uint256",
      },
      {
        internalType: "contract IProxyCreationCallback",
        name: "callback",
        type: "address",
      },
    ],
    name: "createProxyWithCallback",
    outputs: [
      {
        internalType: "contract BananaAccountProxy",
        name: "proxy",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_singleton",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "initializer",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "saltNonce",
        type: "uint256",
      },
    ],
    name: "createProxyWithNonce",
    outputs: [
      {
        internalType: "contract BananaAccountProxy",
        name: "proxy",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_singleton",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_salt",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "initializer",
        type: "bytes",
      },
    ],
    name: "getAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_foo",
        type: "uint256",
      },
    ],
    name: "getBytecode",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxyCreationCode",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610e70908161001c8239f35b600080fdfe60806040526004361015610013575b600080fd5b60003560e01c80631688f0b91461009f5780633408e4701461009657806353e5d9351461008d5780635abb2d5b1461008457806381871cbc1461007b578063d18af54d146100725763ec9e80bb1461006a57600080fd5b61000e610601565b5061000e6104ce565b5061000e610428565b5061000e6102e2565b5061000e610296565b5061000e61020c565b3461000e5760206100b86100b2366101c2565b916106c5565b6040516001600160a01b039091168152f35b6001600160a01b0381160361000e57565b50634e487b7160e01b600052604160045260246000fd5b6001600160401b03811161010557604052565b61010d6100db565b604052565b606081019081106001600160401b0382111761010557604052565b90601f801991011681019081106001600160401b0382111761010557604052565b9061015c604051928361012d565b565b81601f8201121561000e578035906001600160401b0382116101b5575b60405192610193601f8401601f19166020018561012d565b8284526020838301011161000e57816000926020809301838601378301015290565b6101bd6100db565b61017b565b90606060031983011261000e576004356101db816100ca565b91602435906001600160401b03821161000e576101fa9160040161015e565b9060443590565b600091031261000e57565b503461000e57600036600319011261000e576020604051468152f35b918091926000905b828210610248575011610241575050565b6000910152565b91508060209183015181860152018291610230565b9060209161027681518092818552858086019101610228565b601f01601f1916010190565b90602061029392818152019061025d565b90565b503461000e57600036600319011261000e576102de61015e604051906102bf602082018361012d565b8082526108c3602083013960405191829160208352602083019061025d565b0390f35b503461000e57606036600319011261000e57600435610300816100ca565b604435906001600160401b03821161000e5761040261040e9161032a6102de94369060040161015e565b805160209182012060408051808401928352602435818301529081526103f391601f199161035960608261012d565b519020936103996103a561015e61037187820161014e565b90808252610a2188830139604051878101949093849290916001600160a01b0316908661074c565b0384810183528261012d565b5190206040516001600160f81b03199481019485523060601b6bffffffffffffffffffffffff191660018601526015850195909552603584015291929182605585010390810183528261012d565b5190206001600160a01b031690565b6001600160a01b031690565b6040516001600160a01b0390911681529081906020820190565b503461000e5760408060031936011261000e576104a96102de916104c4600435610451816100ca565b825160209161015e6104658482018461012d565b80835283830190610b7f82396104b88651918583019360018060a01b031684526024358884015287835261049883610112565b875198899551809288880190610228565b84019151809386840190610228565b0103808552018361012d565b5191829182610282565b503461000e57608036600319011261000e576004356104ec816100ca565b6024356001600160401b03811161000e5761050b90369060040161015e565b90604435916064359161051d836100ca565b61056d604051602081019061056381610555888a86909160349282526bffffffffffffffffffffffff199060601b1660208201520190565b03601f19810183528261012d565b51902083836106c5565b6001600160a01b039093169384610593575b6040516001600160a01b0385168152602090f35b843b1561000e576102de946105c49360008094604051968795869485936303ca56a360e31b85528b60048601610883565b03925af180156105f4575b6105db575b808061057f565b806105e86105ee926100f2565b80610201565b386105d4565b6105fc6108b5565b6105cf565b503461000e5760206106807f4f51faf6c4561ff95f067657e43439f0f856d97c04d9ec9070a6199ad418e2356106a3610639366101c2565b8195929551878301209060405190888201928352604082015246606082015260608152608081018181106001600160401b038211176106b8575b60405251902090856107ac565b604080516001600160a01b03808416825290951660208601529093918291820190565b0390a16040516001600160a01b039091168152f35b6106c06100db565b610673565b92916107247f4f51faf6c4561ff95f067657e43439f0f856d97c04d9ec9070a6199ad418e235926107479261055561071a83516020850120926040519283916020830195869091604092825260208201520190565b51902090866107ac565b604080516001600160a01b03808416825290961660208701529094918291820190565b0390a1565b6020929190610762849282815194859201610228565b019081520190565b1561077157565b60405162461bcd60e51b815260206004820152601360248201527210dc99585d194c8818d85b1b0819985a5b1959606a1b6044820152606490fd5b929190833b1561083e5761081b6107f99261080761015e6107cf6020820161014e565b90808252610cdd60208301396040516001600160a01b03989096879290918a16906020840161074c565b03601f19810186528561012d565b835160009460200185f5948516151561076a565b8051908161082857505050565b8291602083920182875af11561083b5750565b80fd5b60405162461bcd60e51b815260206004820152601f60248201527f53696e676c65746f6e20636f6e7472616374206e6f74206465706c6f796564006044820152606490fd5b9493926108b09160609360018060a01b03809216885216602087015260806040870152608086019061025d565b930152565b506040513d6000823e3d90fdfe6080346100c957601f61015e38819003918201601f19168301916001600160401b038311848410176100ce578084926020946040528339810103126100c957516001600160a01b038116908190036100c957801561007957600080546001600160a01b031916919091179055604051607990816100e58239f35b60405162461bcd60e51b815260206004820152602260248201527f496e76616c69642073696e676c65746f6e20616464726573732070726f766964604482015261195960f21b6064820152608490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600080546001600160a01b031690803563530ca43760e11b14603c57808092368280378136915af43d82803e156038573d90f35b3d90fd5b6020918152f3fea2646970667358221220062a34c5f2edd6e195c856ae72bda7671b4747eb8dae7220a928b511097ce4f364736f6c634300080f00336080346100c957601f61015e38819003918201601f19168301916001600160401b038311848410176100ce578084926020946040528339810103126100c957516001600160a01b038116908190036100c957801561007957600080546001600160a01b031916919091179055604051607990816100e58239f35b60405162461bcd60e51b815260206004820152602260248201527f496e76616c69642073696e676c65746f6e20616464726573732070726f766964604482015261195960f21b6064820152608490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600080546001600160a01b031690803563530ca43760e11b14603c57808092368280378136915af43d82803e156038573d90f35b3d90fd5b6020918152f3fea2646970667358221220062a34c5f2edd6e195c856ae72bda7671b4747eb8dae7220a928b511097ce4f364736f6c634300080f00336080346100c957601f61015e38819003918201601f19168301916001600160401b038311848410176100ce578084926020946040528339810103126100c957516001600160a01b038116908190036100c957801561007957600080546001600160a01b031916919091179055604051607990816100e58239f35b60405162461bcd60e51b815260206004820152602260248201527f496e76616c69642073696e676c65746f6e20616464726573732070726f766964604482015261195960f21b6064820152608490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600080546001600160a01b031690803563530ca43760e11b14603c57808092368280378136915af43d82803e156038573d90f35b3d90fd5b6020918152f3fea2646970667358221220062a34c5f2edd6e195c856ae72bda7671b4747eb8dae7220a928b511097ce4f364736f6c634300080f00336080346100c957601f61015e38819003918201601f19168301916001600160401b038311848410176100ce578084926020946040528339810103126100c957516001600160a01b038116908190036100c957801561007957600080546001600160a01b031916919091179055604051607990816100e58239f35b60405162461bcd60e51b815260206004820152602260248201527f496e76616c69642073696e676c65746f6e20616464726573732070726f766964604482015261195960f21b6064820152608490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600080546001600160a01b031690803563530ca43760e11b14603c57808092368280378136915af43d82803e156038573d90f35b3d90fd5b6020918152f3fea2646970667358221220062a34c5f2edd6e195c856ae72bda7671b4747eb8dae7220a928b511097ce4f364736f6c634300080f0033a264697066735822122008d781b2100f4f38cf6f4f68dee1b919b49f34f01503bcb4225c891bcfa60b9664736f6c634300080f0033";

type BananaAccountProxyFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BananaAccountProxyFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BananaAccountProxyFactory__factory extends ContractFactory {
  constructor(...args: BananaAccountProxyFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BananaAccountProxyFactory> {
    return super.deploy(overrides || {}) as Promise<BananaAccountProxyFactory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BananaAccountProxyFactory {
    return super.attach(address) as BananaAccountProxyFactory;
  }
  override connect(signer: Signer): BananaAccountProxyFactory__factory {
    return super.connect(signer) as BananaAccountProxyFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BananaAccountProxyFactoryInterface {
    return new utils.Interface(_abi) as BananaAccountProxyFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BananaAccountProxyFactory {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BananaAccountProxyFactory;
  }
}
