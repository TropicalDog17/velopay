/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { EntryPoint, EntryPointInterface } from "../EntryPoint";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "preOpGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "paid",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "validAfter",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "validUntil",
        type: "uint48",
      },
      {
        internalType: "bool",
        name: "targetSuccess",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "targetResult",
        type: "bytes",
      },
    ],
    name: "ExecutionResult",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "opIndex",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "FailedOp",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAddressResult",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "SignatureValidationFailed",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sigFailed",
            type: "bool",
          },
          {
            internalType: "uint48",
            name: "validAfter",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "validUntil",
            type: "uint48",
          },
          {
            internalType: "bytes",
            name: "paymasterContext",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.ReturnInfo",
        name: "returnInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "senderInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "factoryInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "paymasterInfo",
        type: "tuple",
      },
    ],
    name: "ValidationResult",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sigFailed",
            type: "bool",
          },
          {
            internalType: "uint48",
            name: "validAfter",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "validUntil",
            type: "uint48",
          },
          {
            internalType: "bytes",
            name: "paymasterContext",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.ReturnInfo",
        name: "returnInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "senderInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "factoryInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "paymasterInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "aggregator",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "stake",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "unstakeDelaySec",
                type: "uint256",
              },
            ],
            internalType: "struct IStakeManager.StakeInfo",
            name: "stakeInfo",
            type: "tuple",
          },
        ],
        internalType: "struct IEntryPoint.AggregatorStakeInfo",
        name: "aggregatorInfo",
        type: "tuple",
      },
    ],
    name: "ValidationResultWithAggregation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
    ],
    name: "AccountDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalDeposit",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "SignatureAggregatorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalStaked",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "unstakeDelaySec",
        type: "uint256",
      },
    ],
    name: "StakeLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "withdrawTime",
        type: "uint256",
      },
    ],
    name: "StakeUnlocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "StakeWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualGasUsed",
        type: "uint256",
      },
    ],
    name: "UserOperationEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "revertReason",
        type: "bytes",
      },
    ],
    name: "UserOperationRevertReason",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "SIG_VALIDATION_FAILED",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initCode",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "paymasterAndData",
        type: "bytes",
      },
    ],
    name: "_validateSenderAndPaymaster",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "depositTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "uint112",
        name: "deposit",
        type: "uint112",
      },
      {
        internalType: "bool",
        name: "staked",
        type: "bool",
      },
      {
        internalType: "uint112",
        name: "stake",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
      {
        internalType: "uint48",
        name: "withdrawTime",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getDepositInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint112",
            name: "deposit",
            type: "uint112",
          },
          {
            internalType: "bool",
            name: "staked",
            type: "bool",
          },
          {
            internalType: "uint112",
            name: "stake",
            type: "uint112",
          },
          {
            internalType: "uint32",
            name: "unstakeDelaySec",
            type: "uint32",
          },
          {
            internalType: "uint48",
            name: "withdrawTime",
            type: "uint48",
          },
        ],
        internalType: "struct IStakeManager.DepositInfo",
        name: "info",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initCode",
        type: "bytes",
      },
    ],
    name: "getSenderAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "getUserOpHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "sender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "initCode",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "callGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "verificationGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "preVerificationGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "paymasterAndData",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
              },
            ],
            internalType: "struct UserOperation[]",
            name: "userOps",
            type: "tuple[]",
          },
          {
            internalType: "contract IAggregator",
            name: "aggregator",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.UserOpsPerAggregator[]",
        name: "opsPerAggregator",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "handleAggregatedOps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation[]",
        name: "ops",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "handleOps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "sender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "verificationGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "preVerificationGas",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "paymaster",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256",
              },
            ],
            internalType: "struct EntryPoint.MemoryUserOp",
            name: "mUserOp",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "userOpHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "contextOffset",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
        ],
        internalType: "struct EntryPoint.UserOpInfo",
        name: "opInfo",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
    ],
    name: "innerHandleOp",
    outputs: [
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "op",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "targetCallData",
        type: "bytes",
      },
    ],
    name: "simulateHandleOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "simulateValidation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a0806040523462000084576101ac8181016001600160401b038111838210176200006e57829162004394833903906000f08015620000625760805260405161430a90816200008a8239608051818181610f1b01528181612d330152612f990152f35b6040513d6000823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b600080fdfe60806040526004361015610023575b361561001957600080fd5b610021613e21565b005b60003560e01c80630396cb60146101775780631d7327561461016e5780631fad948c14610165578063205c28781461015c5780634b1d7cf5146101535780635287ce121461014a57806370a08231146101415780638f41ec5a14610138578063957122ab1461012f5780639b249f6914610126578063a61935311461011d578063b760faf914610114578063bb9fe6bf1461010b578063c23a5cea14610102578063d6383f94146100f9578063ee219423146100f05763fc7e286d0361000e576100eb6114f8565b61000e565b506100eb61135b565b506100eb611236565b506100eb611123565b506100eb61101d565b506100eb610ffc565b506100eb610fdb565b506100eb610eb6565b506100eb610d54565b506100eb610d37565b506100eb610ce2565b506100eb610bc5565b506100eb6108fb565b506100eb6107f1565b506100eb6105ec565b506100eb610475565b5060203660031901126102b55760043563ffffffff81168082036102b5573360009081526020819052604090207fa5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c01916102b0916101fe90916101da811515613efa565b6101f76101ee600185015463ffffffff1690565b63ffffffff1690565b1115613f46565b546001600160701b0393906102929061026c61022034607884901c891661195c565b9661022c881515613f92565b61023881891115613fd3565b61025381610244610364565b94166001600160701b03168452565b6001602084015287166001600160701b03166040830152565b63ffffffff83166060820152600060808201819052338152602081905260409020614010565b6040805194855263ffffffff90911660208501523393918291820190565b0390a2005b600080fd5b50634e487b7160e01b600052604160045260246000fd5b60a081019081106001600160401b038211176102ec57604052565b6102f46102ba565b604052565b61010081019081106001600160401b038211176102ec57604052565b6001600160401b0381116102ec57604052565b606081019081106001600160401b038211176102ec57604052565b90601f801991011681019081106001600160401b038211176102ec57604052565b60405190610371826102d1565b565b6040519060c082018281106001600160401b038211176102ec57604052565b60405190604082018281106001600160401b038211176102ec57604052565b6020906001600160401b0381116103ce575b601f01601f19160190565b6103d66102ba565b6103c3565b9291926103e7826103b1565b916103f56040519384610343565b8294818452818301116102b5578281602093846000960137010152565b6001600160a01b038116036102b557565b6024359061037182610412565b60c4359061037182610412565b359061037182610412565b9181601f840112156102b5578235916001600160401b0383116102b557602083818601950101116102b557565b50346102b5576101c03660031901126102b5576001600160401b036004358181116102b557366023820112156102b5576104b99036906024816004013591016103db565b90366023190161018081126102b557610100604051916104d8836102d1565b126102b5576040516104e9816102f9565b6104f1610423565b815260443560208201526064356040820152608435606082015260a435608082015261051b610430565b60a082015260e43560c08201526101043560e082015281526101243560208201526101443560408201526101643560608201526101843560808201526101a4359182116102b55761058f9261057761057f933690600401610448565b929091611e7a565b6040519081529081906020820190565b0390f35b9060406003198301126102b5576004356001600160401b03928382116102b557806023830112156102b55781600401359384116102b55760248460051b830101116102b55760240191906024356105e981610412565b90565b50346102b5576105fb36610593565b610606829392611622565b60005b848110610658575060009283915b85831061062857610021858561170c565b90919360019061064e61063c8789876116ab565b6106468886611689565b519088611a73565b0194019190610617565b61068361067c61066a83859795611689565b516106768489876116ab565b8461254c565b9190612399565b6001600160a01b03929183166107a75761075a576106a090612399565b9116610710576106b557600101929092610609565b60408051631101335b60e11b815260048101929092526024820152602160448201527f41413332207061796d61737465722065787069726564206f72206e6f742064756064820152606560f81b608482015260a490fd5b0390fd5b604051631101335b60e11b81528061070c8460048301608091815260406020820152601460408201527320a0999a1039b4b3b730ba3ab9329032b93937b960611b60608201520190565b604051631101335b60e11b81528061070c85600483016080918152604060208201526017604082015276414132322065787069726564206f72206e6f742064756560481b60608201520190565b604051631101335b60e11b81528061070c8660048301608091815260406020820152601460408201527320a0991a1039b4b3b730ba3ab9329032b93937b960611b60608201520190565b50346102b5576040806003193601126102b5576004359061081182610412565b602435916000923384528360205282842060018060701b038154168083116108bb576108b8938361085f88959461085961084d88978897611945565b6001600160701b031690565b90612805565b86516001600160a01b03831681526020810182905233907fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb90604090a28651916001600160a01b03165af16108b26116dc565b50614232565b51f35b845162461bcd60e51b8152602060048201526019602482015278576974686472617720616d6f756e7420746f6f206c6172676560381b6044820152606490fd5b50346102b55761090a36610593565b6000805b838210610ab75761091f9150611622565b6000805b848110610a2957505060008093815b81811061096b57610021868660007f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d81604051a261170c565b6109c461097982848a611b76565b61099761098b61098b60208401611bdb565b6001600160a01b031690565b7f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d6000604051a280611ba6565b906000915b8083106109e1575050506109dc90611b66565b610932565b90919497610a1c610a16610a2292610a108c8b610a0982610a038e8b8d6116ab565b92611689565b5191611a73565b9061195c565b99611b66565b95611b66565b91906109c9565b610a34818688611b76565b6020610a4c610a438380611ba6565b92909301611bdb565b6000926001600160a01b03909116905b828410610a755750505050610a7090611b66565b610923565b90919294610a1c81610aaa85610aa3610a91610aaf968d611689565b51610a9d8c8b8a6116ab565b8561254c565b908b61235e565b611b66565b929190610a5c565b610ac2828587611b76565b90610acd8280611ba6565b92610add61098b60208301611bdb565b916001600160a01b038316610af56001821415611be5565b610b16575b505050610b1091610b0a9161195c565b91611b66565b9061090e565b909592610b2f60409996939998959897888101906117bd565b92908a3b156102b55789938b918a51938492839263e3563a4f60e01b845260049e8f850193610b5d94611d34565b03815a93600094fa9081610bac575b50610b9657865163086a9f7560e41b81526001600160a01b038a16818a0190815281906020010390fd5b9497509295509093509181610b0a610b10610afa565b80610bb9610bbf92610315565b80610d2c565b38610b6c565b50346102b55760203660031901126102b55761058f6080600435610be881610412565b60409182918251610bf8816102d1565b60009281848093528260208201528286820152826060820152015260018060a01b03168152806020522090610c8f65ffffffffffff6001835194610c3b866102d1565b8054828060701b0390818116885260ff8160701c161515602089015260781c16858701520154610c7a63ffffffff8216606087019063ffffffff169052565b60201c16608084019065ffffffffffff169052565b5191829182919091608065ffffffffffff8160a084019560018060701b03808251168652602082015115156020870152604082015116604086015263ffffffff6060820151166060860152015116910152565b50346102b55760203660031901126102b557600435610d0081610412565b6001600160a01b0316600090815260208181526040918290205491516001600160701b03909216825290f35b60009103126102b557565b50346102b55760003660031901126102b557602060405160018152f35b50346102b55760603660031901126102b55760046001600160401b0381358181116102b557610d869036908401610448565b905060243591610d9583610412565b6044359081116102b557610dac9036908501610448565b929091159081610eac575b50610e63576014821015610ded575b61070c8360405191829162461bcd60e51b8352820160409060208152600060208201520190565b610dfd610e0992610e0392612030565b9061203e565b60601c90565b3b15610e16573880610dc6565b61070c9060405191829162461bcd60e51b8352820160609060208152601b60208201527f41413330207061796d6173746572206e6f74206465706c6f796564000000000060408201520190565b61070c8360405191829162461bcd60e51b8352820160609060208152601960208201527810504c8c081858d8dbdd5b9d081b9bdd0819195c1b1bde5959603a1b60408201520190565b90503b1538610db7565b50346102b55760203660031901126102b5576004356001600160401b0381116102b557610ee96024913690600401610448565b604051632b870d1b60e11b8152918291610f0691600484016121b6565b6001600160a01b0391602091849190038160007f000000000000000000000000000000000000000000000000000000000000000086165af1918215610f95575b600092610f65575b50604051633653dc0360e11b815291166004820152fd5b610f8791925060203d8111610f8e575b610f7f8183610343565b8101906121a1565b9038610f4e565b503d610f75565b610f9d611921565b610f46565b90816101609103126102b55790565b60206003198201126102b557600435906001600160401b0382116102b5576105e991600401610fa2565b50346102b5576020610ff4610fef36610fb1565b611f86565b604051908152f35b5060203660031901126102b55761002160043561101881610412565b613ea2565b50346102b557600080600319360112611120573381528060205260408120600181019063ffffffff8254169081156110ee576110a461107e6110b19361107061106b855460ff9060701c1690565b6140b5565b65ffffffffffff42166140f5565b845469ffffffffffff000000001916602082901b69ffffffffffff000000001617909455565b805460ff60701b19169055565b60405165ffffffffffff91909116815233907ffa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a90602090a2604051f35b60405162461bcd60e51b815260206004820152600a6024820152691b9bdd081cdd185ad95960b21b6044820152606490fd5b80fd5b50346102b55760203660031901126102b5576100216000808060043561114881610412565b33600090815260208190526040902080546111dd906111729060781c6001600160701b031661084d565b9161117e831515614110565b6111ca600182016111b765ffffffffffff6111a3835465ffffffffffff9060201c1690565b166111af811515614153565b42101561419f565b805469ffffffffffffffffffff19169055565b8054600160781b600160e81b0319169055565b604080516001600160a01b03841681526020810183905233917fb7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda391a2604051916001600160a01b03165af16112306116dc565b506141eb565b50346102b55760603660031901126102b5576001600160401b036004358181116102b557611268903690600401610fa2565b6024359161127583610412565b6044359081116102b55761129061070c913690600401610448565b6112986115a0565b6112a18561228b565b6112b46112ae828761242f565b90613d38565b946112c482600092438452611974565b43825296606094919384926001600160a01b038316611327575b50505050608001519361130d60406112ff602084015165ffffffffffff1690565b92015165ffffffffffff1690565b90604051968796630116f59360e71b885260048801611dc9565b839550839496506113416040949293945180948193611dbb565b03925af19060806113506116dc565b9291903880806112de565b50346102b55761136a36610fb1565b6113726115a0565b61137b8261228b565b611385818361242f565b825160a001519193916113a5906001600160a01b0316613dde565b613dde565b8351519091906113bd906001600160a01b0316613dde565b946113c6611ff9565b506113f56113d9604095868101906117bd565b906000601483106114f05750610dfd6113a092610e0392612030565b916113ff91613d38565b8051608086015185870151602084015191976001600160a01b039093169360018514938593909190899065ffffffffffff1691015165ffffffffffff1691606001519261144a610373565b9a8b5260208b0152841515898b015265ffffffffffff1660608a015265ffffffffffff16608089015260a0880152151590816114e7575b506114a2575061070c925194859463e0cff05f60e01b865260048601612147565b919061070c936114b184613dde565b6114cb6114bc610392565b6001600160a01b039096168652565b602085015251633ebb2d3960e21b8152958695600487016120c0565b90501538611481565b915050613dde565b50346102b55760203660031901126102b55760043561151681610412565b60018060a01b0316600052600060205260a0604060002065ffffffffffff600182549201546040519260018060701b0390818116855260ff8160701c161515602086015260781c16604084015263ffffffff8116606084015260201c166080820152f35b6020906001600160401b038111611593575b60051b0190565b61159b6102ba565b61158c565b604051906115ad826102d1565b60405160808361010083016001600160401b03811184821017611615575b60405260009283815283602082015283604082015283606082015283838201528360a08201528360c08201528360e082015281528260208201528260408201528260608201520152565b61161d6102ba565b6115cb565b9061162c8261157a565b6116396040519182610343565b828152809261164a601f199161157a565b019060005b82811061165b57505050565b6020906116666115a0565b8282850101520161164f565b50634e487b7160e01b600052603260045260246000fd5b602091815181101561169e575b60051b010190565b6116a6611672565b611696565b91908110156116cf575b60051b8101359061015e19813603018212156102b5570190565b6116d7611672565b6116b5565b3d15611707573d906116ed826103b1565b916116fb6040519384610343565b82523d6000602084013e565b606090565b6001600160a01b0316801561177d5760008092918192604051915af16117306116dc565b501561173857565b60405162461bcd60e51b815260206004820152601f60248201527f41413931206661696c65642073656e6420746f2062656e6566696369617279006044820152606490fd5b60405162461bcd60e51b81526020600482015260186024820152774141393020696e76616c69642062656e656669636961727960401b6044820152606490fd5b903590601e19813603018212156102b557018035906001600160401b0382116102b5576020019181360383136102b557565b908160209103126102b5575190565b908060209392818452848401376000828201840152601f01601f1916010190565b918091926000905b82821061183f575011611838575050565b6000910152565b91508060209183015181860152018291611827565b9060209161186d8151809281855285808601910161181f565b601f01601f1916010190565b906118936080916105e996946101c08086528501916117fe565b9360e0815160018060a01b0380825116602087015260208201516040870152604082015160608701526060820151858701528482015160a087015260a08201511660c086015260c081015182860152015161010084015260208101516101208401526040810151610140840152606081015161016084015201516101808201526101a0818403910152611854565b506040513d6000823e3d90fd5b50634e487b7160e01b600052601160045260246000fd5b818110611950570390565b61195861192e565b0390565b81198111611968570190565b61197061192e565b0190565b905a9181602061198d60608301519360608101906117bd565b906119ad856040519586948594630eb993ab60e11b865260048601611879565b03816000305af160009181611a43575b50611a3c575060206000803e60005163deaddead60e01b146119fb576119f56119ea6105e9945a90611945565b60808401519061195c565b916136f2565b60408051631101335b60e11b8152600060048201526024810191909152600f60448201526e41413935206f7574206f662067617360881b6064820152608490fd5b9250505090565b611a6591925060203d8111611a6c575b611a5d8183610343565b8101906117ef565b90386119bd565b503d611a53565b909291925a93806020611a8f60608301519460608101906117bd565b90611aaf866040519586948594630eb993ab60e11b865260048601611879565b03816000305af160009181611b46575b50611b3f575060206000803e60005163deaddead60e01b14611afe57611af8611aed6105e995965a90611945565b60808301519061195c565b926138eb565b60408051631101335b60e11b8152600481018590526024810191909152600f60448201526e41413935206f7574206f662067617360881b6064820152608490fd5b9450505050565b611b5f91925060203d8111611a6c57611a5d8183610343565b9038611abf565b6001906000198114611968570190565b9190811015611b99575b60051b81013590605e19813603018212156102b5570190565b611ba1611672565b611b80565b903590601e19813603018212156102b557018035906001600160401b0382116102b557602001918160051b360383136102b557565b356105e981610412565b15611bec57565b60405162461bcd60e51b815260206004820152601760248201527620a09c9b1034b73b30b634b21030b3b3b932b3b0ba37b960491b6044820152606490fd5b9035601e19823603018112156102b55701602081359101916001600160401b0382116102b55781360383136102b557565b6105e991611c7a81611c6d8461043d565b6001600160a01b03169052565b60208201356020820152611d15611cc6611cab611c9a6040860186611c2b565b6101608060408801528601916117fe565b611cb86060860186611c2b565b9085830360608701526117fe565b6080840135608084015260a084013560a084015260c084013560c084015260e084013560e08401526101008085013590840152610120611d0881860186611c2b565b91858403908601526117fe565b91611d266101409182810190611c2b565b9290918185039101526117fe565b949391929083604087016040885252606086019360608160051b8801019482600090815b848310611d77575050505050508460206105e9959685039101526117fe565b909192939497605f198b8203018552883561015e1984360301811215611db75760019184611da59201611c5c565b98602090810196950193019190611d58565b8280fd5b908092918237016000815290565b9290936105e996959260c0958552602085015265ffffffffffff8092166040850152166060830152151560808201528160a08201520190611854565b15611e0c57565b60405162461bcd60e51b81526020600482015260176024820152764141393220696e7465726e616c2063616c6c206f6e6c7960481b6044820152606490fd5b9060406105e992600081528160208201520190611854565b6040906105e9939281528160208201520190611854565b909291925a93611e8b303314611e05565b8151946040860151955a611388606083015189010111611f75576105e9966000958051611ed2575b50505090611ecc915a90036080840151019436916103db565b91613aad565b8251611ef092611eec9290916001600160a01b0316614273565b1590565b611efc575b8080611eb3565b611ecc92919450611f0b614285565b8051611f1e575b50506001939091611ef5565b602085810151835193909101516040516001600160a01b039094169391927f1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a20192918291611f6b9183611e63565b0390a33880611f12565b63deaddead60e01b60005260206000fd5b80611f956101408201826117bd565b5003601f198101604051918201604052808252602082019283375190206040516020810191825230604082015246606082015260608152608081018181106001600160401b03821117611fec575b60405251902090565b611ff46102ba565b611fe3565b60405190604082018281106001600160401b03821117612023575b60405260006020838281520152565b61202b6102ba565b612014565b906014116102b55790601490565b6bffffffffffffffffffffffff19903581811693926014811061206057505050565b60140360031b82901b16169150565b9060c060a06105e993805184526020810151602085015260408101511515604085015265ffffffffffff80606083015116606086015260808201511660808501520151918160a08201520190611854565b92946121216103719561210f6101009599986120fd6120e9602097610140808c528b019061206f565b9b878a019060208091805184520151910152565b80516060890152602001516080880152565b805160a08701526020015160c0860152565b80516001600160a01b031660e08501520151805191909201908152602091820151910152565b6121906103719461217e61216960a0959998969960e0865260e086019061206f565b98602085019060208091805184520151910152565b80516060840152602001516080830152565b019060208091805184520151910152565b908160209103126102b557516105e981610412565b9160206105e99381815201916117fe565b906121e1906105e9969495936060845260608401916117fe565b6001600160a01b0390941660208201528084036040909101526117fe565b60009060033d1161220c57565b905060046000803e60005160e01c90565b600060443d106105e957604051600319913d83016004833e81516001600160401b03918282113d60248401111761227a57818401948551938411612282573d8501016020848701011161227a57506105e992910160200190610343565b949350505050565b50949350505050565b61229860408201826117bd565b6122b06122a484611bdb565b936101208101906117bd565b9290303b156102b5576000936122db91604051968795869563957122ab60e01b8752600487016121c7565b0381305afa908161234b575b506103715760016122f66121ff565b6308c379a01461230f575b61230757565b610371611921565b61231761221d565b80612323575b50612301565b8051600092501561231d57604051631101335b60e11b815290819061070c9060048301611e4b565b80610bb961235892610315565b386122e7565b92919061236a90612399565b6001600160a01b039390918416908416036107a75761075a5761238c90612399565b9116610710576106b55750565b80156123df576123a890613cea565b65ffffffffffff8060408301511642119081156123cf575b5090516001600160a01b031691565b90506020820151164210386123c0565b50600090600090565b156123ef57565b60405162461bcd60e51b815260206004820152601860248201527741413934206761732076616c756573206f766572666c6f7760401b6044820152606490fd5b916000915a9381519061244282826126b7565b61244b81611f86565b6020840152612481608083015160608401511760408401511760018060781b03906101008401359060e0850135171711156123e8565b61248a8261275f565b612495818584612824565b97906124a043600052565b60a09490940151606094906001600160a01b0316612532575b505a810360a0840135106124e35760809360c092604087015260608601525a900391013501910152565b60408051631101335b60e11b8152600060048201526024810191909152601e60448201527f41413430206f76657220766572696669636174696f6e4761734c696d697400006064820152608490fd5b909350816125439297508584613298565b959092386124b9565b9290916000925a825161255f81846126b7565b61256883611f86565b602085015261259e608082015160608301511760408301511760018060781b03906101008601359060e0870135171711156123e8565b6125a78161275f565b6125b38186868b612a85565b98906125be43600052565b60a09390930151606093906001600160a01b0316612650575b505a840360a0860135106126035750604085015260608401526080919060c0905a900391013501910152565b60408051631101335b60e11b815260048101929092526024820152601e60448201527f41413430206f76657220766572696669636174696f6e4761734c696d697400006064820152608490fd5b9092508161266292985086868561346c565b969091386125d7565b1561267257565b60405162461bcd60e51b815260206004820152601d60248201527f4141393320696e76616c6964207061796d6173746572416e64446174610000006044820152606490fd5b61271c906126d46126c782611bdb565b6001600160a01b03168452565b602081013560208401526080810135604084015260a0810135606084015260c0810135608084015260e081013560c084015261010081013560e08401526101208101906117bd565b90811561275457612746610e03610dfd8460a09461274160146103719998101561266b565b612030565b6001600160a01b0316910152565b505060a06000910152565b60a08101516001600160a01b0316156127945760c060035b60ff60408401519116606084015102016080830151019101510290565b60c06001612777565b6127b560409295949395606083526060830190611c5c565b9460208201520152565b90610371602f60405180946e020a09919903932bb32b93a32b21d1608d1b60208301526127f5815180926020868601910161181f565b810103600f810185520183610343565b80546001600160701b0319166001600160701b03909216919091179055565b916000926000925a936128b26020835193612845855160018060a01b031690565b9561285d61285660408301836117bd565b9084612cdf565b60a08601516001600160a01b03169061287543600052565b6001600160a01b0391821615968693849189612a32575b6060015190860151604051633a871cdd60e01b815297889687958693906004850161279d565b03938a1690f1829181612a12575b50612a0957506001906128d16121ff565b6308c379a0146129ce575b50612986575b6128ef575b50505a900391565b6001600160a01b03166000908152602081905260409020805461291a906001600160701b031661084d565b80831161293d576129369290036001600160701b031690612805565b38806128e7565b60408051631101335b60e11b8152600060048201526024810191909152601760448201527610504c8c48191a591b89dd081c185e481c1c99599d5b99604a1b6064820152608490fd5b60408051631101335b60e11b815260006004820152602481019190915260166044820152754141323320726576657274656420286f72204f4f472960501b6064820152608490fd5b6129d661221d565b90816129e257506128dc565b61070c916129f091506127bf565b604051631101335b60e11b815291829160048301611e4b565b95506128e29050565b612a2b91925060203d8111611a6c57611a5d8183610343565b90386128c0565b9450612a6361084d612a568c60018060a01b03166000526000602052604060002090565b546001600160701b031690565b8b811115612a7a5750856060835b9691505061288c565b606087918d03612a71565b9290926000936000935a94612b156020835193612aa8855160018060a01b031690565b95612ac1612ab960408301836117bd565b90848b612f42565b60a08601516001600160a01b031690612ad943600052565b6001600160a01b0391821615968693849189612c9c576060015190860151604051633a871cdd60e01b815297889687958693906004850161279d565b03938a1690f1829181612c7c575b50612c735750600190612b346121ff565b6308c379a014612c36575b50612bee575b612b53575b5050505a900391565b6001600160a01b031660009081526020819052604090208054909290612b81906001600160701b031661084d565b91828211612ba75750612b9f9291036001600160701b031690612805565b388080612b4a565b60408051631101335b60e11b815260048101929092526024820152601760448201527610504c8c48191a591b89dd081c185e481c1c99599d5b99604a1b6064820152608490fd5b60408051631101335b60e11b815260048101859052602481019190915260166044820152754141323320726576657274656420286f72204f4f472960501b6064820152608490fd5b612c3e61221d565b9081612c4a5750612b3f565b8591612c5691506127bf565b604051631101335b60e11b815291829161070c9160048401611e63565b9650612b459050565b612c9591925060203d8111611a6c57611a5d8183610343565b9038612b23565b9450612cc061084d612a568c60018060a01b03166000526000602052604060002090565b8c80821115612cd45750919485925061288c565b879160609103612a71565b909180612ceb57505050565b8151516001600160a01b031692833b612ef357825160600151604051632b870d1b60e11b81529060208280612d248787600484016121b6565b0381600060018060a01b0395867f00000000000000000000000000000000000000000000000000000000000000001690f1918215612ee6575b600092612ec6575b50808216958615612e795716809503612e2a573b15612ddb57610e03610dfd7fd51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d93612daf93612030565b602083810151935160a00151604080516001600160a01b039485168152939091169183019190915290a3565b60408051631101335b60e11b8152600060048201526024810191909152602060448201527f4141313520696e6974436f6465206d757374206372656174652073656e6465726064820152608490fd5b60408051631101335b60e11b8152600060048201526024810191909152602060448201527f4141313420696e6974436f6465206d7573742072657475726e2073656e6465726064820152608490fd5b60408051631101335b60e11b8152600060048201526024810191909152601b60448201527a4141313320696e6974436f6465206661696c6564206f72204f4f4760281b6064820152608490fd5b612edf91925060203d8111610f8e57610f7f8183610343565b9038612d65565b612eee611921565b612d5d565b60408051631101335b60e11b8152600060048201526024810191909152601f60448201527f414131302073656e64657220616c726561647920636f6e7374727563746564006064820152608490fd5b92909181612f51575b50505050565b8251516001600160a01b031693843b61315f57835160600151604051632b870d1b60e11b81529060208280612f8a8888600484016121b6565b0381600060018060a01b0395867f00000000000000000000000000000000000000000000000000000000000000001690f1918215613152575b600092613132575b508082169687156130e55716809603613096573b156130495750610e03610dfd7fd51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d9361301693612030565b602083810151935160a00151604080516001600160a01b039485168152939091169183019190915290a338808080612f4b565b60408051631101335b60e11b815260048101929092526024820152602060448201527f4141313520696e6974436f6465206d757374206372656174652073656e6465726064820152608490fd5b60408051631101335b60e11b8152600481018490526024810191909152602060448201527f4141313420696e6974436f6465206d7573742072657475726e2073656e6465726064820152608490fd5b60408051631101335b60e11b8152600481018690526024810191909152601b60448201527a4141313320696e6974436f6465206661696c6564206f72204f4f4760281b6064820152608490fd5b61314b91925060203d8111610f8e57610f7f8183610343565b9038612fcb565b61315a611921565b612fc3565b60408051631101335b60e11b815260048101929092526024820152601f60448201527f414131302073656e64657220616c726561647920636f6e7374727563746564006064820152608490fd5b156131b357565b60405162461bcd60e51b815260206004820152601f60248201527f4141343120746f6f206c6974746c6520766572696669636174696f6e476173006044820152606490fd5b91906040838203126102b55782516001600160401b0381116102b55783019080601f830112156102b55781519161322e836103b1565b9161323c6040519384610343565b838352602084830101116102b55760209261325c9184808501910161181f565b92015190565b90610371602f60405180946e020a09999903932bb32b93a32b21d1608d1b60208301526127f5815180926020868601910161181f565b93919290936060946000946000938251936132cc60a08a870151966132be8589116131ac565b01516001600160a01b031690565b916132e98360018060a01b03166000526000602052604060002090565b8054909690613300906001600160701b031661084d565b9185831061341d576133499789978894602092613329918a90036001600160701b031690612805565b0151604051637a32e3bf60e11b815298899788968793906004850161279d565b03946001600160a01b03169103f19081839184936133f7575b506133f05750506001906133746121ff565b6308c379a0146133ce575b5061338657565b60408051631101335b60e11b815260006004820152602481019190915260166044820152754141333320726576657274656420286f72204f4f472960501b6064820152608490fd5b6133d661221d565b90816133e2575061337f565b61070c916129f09150613262565b9450925050565b90925061341691503d8085833e61340e8183610343565b8101906131f8565b9138613362565b60408051631101335b60e11b8152600060048201526024810191909152601e60448201527f41413331207061796d6173746572206465706f73697420746f6f206c6f7700006064820152608490fd5b91949293909360609560009560009382519061349360a08b840151936132be8486116131ac565b936134b08560018060a01b03166000526000602052604060002090565b80546134c4906001600160701b031661084d565b8781106135b857926020899795929361332989958b99976134ef9c60018060701b0391031690612805565b03946001600160a01b03169103f190818391849361359a575b5061359257505060019061351a6121ff565b6308c379a014613573575b5061352d5750565b60408051631101335b60e11b81526004810192909252602482015260166044820152754141333320726576657274656420286f72204f4f472960501b6064820152608490fd5b61357b61221d565b90816135875750613525565b612c56925050613262565b955093505050565b9092506135b191503d8085833e61340e8183610343565b9138613508565b60408051631101335b60e11b8152600481018c90526024810191909152601e60448201527f41413331207061796d6173746572206465706f73697420746f6f206c6f7700006064820152608490fd5b6003111561361157565b634e487b7160e01b600052602160045260246000fd5b92919061364560409160028652606060208701526060860190611854565b930152565b93929190600381101561361157604091613645918652606060208701526060860190611854565b906103716036604051809475020a09a98103837b9ba27b8103932bb32b93a32b21d160551b60208301526136ae815180926020868601910161181f565b8101036016810185520183610343565b6080906000815260406020820152601260408201527110504d4c081c1bdcdd13dc081c995d995c9d60721b60608201520190565b929190925a9360009180519161370783613ca3565b60a084018051909691946001600160a01b03939092918416808061381c57505082516001600160a01b03169050985b5a900301938402976040840190898251106137c8576000805160206142b58339815191529461376e6020928c6137c395510390613e2a565b015194896020613795613787865160018060a01b031690565b9a516001600160a01b031690565b9401519785604051968796169a16988590949392606092608083019683521515602083015260408201520152565b0390a4565b604051631101335b60e11b81528061070c600482016080906000815260406020820152602060408201527f414135312070726566756e642062656c6f772061637475616c476173436f737460608201520190565b9a91805161382c575b5050613736565b6060850151600099509091803b156138e75791899189836138669560405180978196829563a9a2340960e01b84528c029060048401613627565b0393f190816138d4575b506138cf57600161387f6121ff565b6308c379a0146138b0575b613896575b3880613825565b604051631101335b60e11b81528061070c600482016136be565b6138b861221d565b806138c3575061388a565b6129f061070c91613671565b61388f565b80610bb96138e192610315565b38613870565b8980fd5b9392915a906000928051906138ff82613ca3565b60a083018051909791956001600160a01b0395909291861680806139b657505084516001600160a01b03169050915b5a9003019485029860408301908a82511061396957506000805160206142b583398151915294939261376e6137c3938c602094510390613e2a565b60408051631101335b60e11b815260048101929092526024820152602060448201527f414135312070726566756e642062656c6f772061637475616c476173436f73746064820152608490fd5b939180516139c6575b505061392e565b606087015160009a509091803b15613aa957918a918a83613a009560405180978196829563a9a2340960e01b84528c029060048401613627565b0393f19081613a96575b50613a91576001613a196121ff565b6308c379a014613a74575b613a30575b38806139bf565b60408051631101335b60e11b8152600481018d90526024810191909152601260448201527110504d4c081c1bdcdd13dc081c995d995c9d60721b6064820152608490fd5b613a7c61221d565b80613a875750613a24565b612c568d91613671565b613a29565b80610bb9613aa392610315565b38613a0a565b8a80fd5b909392915a94805191613abf83613ca3565b60a084018051909691946001600160a01b03939092918416908180613b7557505082516001600160a01b03169050985b5a900301938402976040840190898251106137c8576000805160206142b583398151915294613b276020928c6137c395510390613e2a565b613b3088613607565b015194896020613b49613787865160018060a01b031690565b940151604080519182529815602082015297880152606087015290821695909116939081906080820190565b9a918151613b85575b5050613aef565b878402613b918a613607565b60028a14613c03576060860151823b156102b557613bcb93600080948d6040519788968795869363a9a2340960e01b85526004850161364a565b0393f18015613bf6575b613be3575b505b3880613b7e565b80610bb9613bf092610315565b38613bda565b613bfe611921565b613bd5565b6060860151823b156102b557613c3593600080948d6040519788968795869363a9a2340960e01b85526004850161364a565b0393f19081613c90575b50613c8b576001613c4e6121ff565b6308c379a014613c78575b15613bdc57604051631101335b60e11b81528061070c600482016136be565b613c8061221d565b806138c35750613c59565b613bdc565b80610bb9613c9d92610315565b38613c3f565b60e060c0820151910151808214613cc757480180821015613cc2575090565b905090565b5090565b60405190613cd882610328565b60006040838281528260208201520152565b613cf2613ccb565b5065ffffffffffff808260a01c168015613d31575b60405192613d1484610328565b6001600160a01b038116845260d01c602084015216604082015290565b5080613d07565b613d4d613d5391613d47613ccb565b50613cea565b91613cea565b81516001600160a01b039081169291908315613dd3575b65ffffffffffff928391826040816020850151169301511693836040816020840151169201511690808410613dcb575b50808511613dc3575b5060405195613db187610328565b16855216602084015216604082015290565b935038613da3565b925038613d9a565b815181169350613d6a565b90613de7611ff9565b6001600160a01b03909216600090815260208181526040909120805460781c6001600160701b031684526001015463ffffffff1690830152565b61037133613ea2565b6001600160a01b0316600090815260208190526040902080546001600160701b0392613e5791841661195c565b91808311613e6a57610371921690612805565b60405162461bcd60e51b815260206004820152601060248201526f6465706f736974206f766572666c6f7760801b6044820152606490fd5b613eac3482613e2a565b6001600160a01b0316600081815260208181526040918290205491516001600160701b0390921682527f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c491a2565b15613f0157565b60405162461bcd60e51b815260206004820152601a60248201527f6d757374207370656369667920756e7374616b652064656c61790000000000006044820152606490fd5b15613f4d57565b60405162461bcd60e51b815260206004820152601c60248201527f63616e6e6f7420646563726561736520756e7374616b652074696d65000000006044820152606490fd5b15613f9957565b60405162461bcd60e51b81526020600482015260126024820152711b9bc81cdd185ad9481cdc1958da599a595960721b6044820152606490fd5b15613fda57565b60405162461bcd60e51b815260206004820152600e60248201526d7374616b65206f766572666c6f7760901b6044820152606490fd5b9065ffffffffffff6080600161037194614032828060701b0386511682612805565b6020850151151581549060ff60701b9060701b168060ff60701b1983161783558360781b8460e81b03604088015160781b16918460701b8560e81b03191617178155019263ffffffff60608201511663ffffffff1985541617845501511669ffffffffffff0000000082549160201b169069ffffffffffff000000001916179055565b156140bc57565b60405162461bcd60e51b8152602060048201526011602482015270616c726561647920756e7374616b696e6760781b6044820152606490fd5b9065ffffffffffff8080931691168092038111611968570190565b1561411757565b60405162461bcd60e51b81526020600482015260146024820152734e6f207374616b6520746f20776974686472617760601b6044820152606490fd5b1561415a57565b60405162461bcd60e51b815260206004820152601d60248201527f6d7573742063616c6c20756e6c6f636b5374616b6528292066697273740000006044820152606490fd5b156141a657565b60405162461bcd60e51b815260206004820152601b60248201527f5374616b65207769746864726177616c206973206e6f742064756500000000006044820152606490fd5b156141f257565b60405162461bcd60e51b81526020600482015260186024820152776661696c656420746f207769746864726177207374616b6560401b6044820152606490fd5b1561423957565b60405162461bcd60e51b81526020600482015260126024820152716661696c656420746f20776974686472617760701b6044820152606490fd5b9060009283809360208451940192f190565b3d6108008082116142ac575b50604051906020818301016040528082526000602083013e90565b90503861429156fe49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419fa26469706673582212200a04bc05f3e3fccadc62e26b82080d9f14e84c68adf1755857856a3eca7ab0ef64736f6c634300080f00336080806040523461001657610190908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c63570e1a361461002857600080fd5b3461009e57602036600319011261009e5760043567ffffffffffffffff9182821161009e573660238301121561009e57816004013592831161009e57366024848401011161009e5761009a61008084602485016100b8565b6040516001600160a01b0390911681529081906020820190565b0390f35b80fd5b50634e487b7160e01b600052604160045260246000fd5b908060141161013b5767ffffffffffffffff91601319820183811161014d575b60405193600b8401601f19908116603f0116850190811185821017610140575b6040528084526020840190368484011161013b576020946000600c819682946014880187378301015251923560601c5af190600051911561013557565b60009150565b600080fd5b6101486100a1565b6100f8565b6101556100a1565b6100d856fea2646970667358221220aaf5ed5cbd476151c220422c4b8c7bdf3e1df8969310c66ab9dc05325dad93a764736f6c634300080f0033";

type EntryPointConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EntryPointConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EntryPoint__factory extends ContractFactory {
  constructor(...args: EntryPointConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EntryPoint> {
    return super.deploy(overrides || {}) as Promise<EntryPoint>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EntryPoint {
    return super.attach(address) as EntryPoint;
  }
  override connect(signer: Signer): EntryPoint__factory {
    return super.connect(signer) as EntryPoint__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EntryPointInterface {
    return new utils.Interface(_abi) as EntryPointInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EntryPoint {
    return new Contract(address, _abi, signerOrProvider) as EntryPoint;
  }
}
