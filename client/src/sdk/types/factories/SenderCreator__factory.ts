/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { SenderCreator, SenderCreatorInterface } from "../SenderCreator";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initCode",
        type: "bytes",
      },
    ],
    name: "createSender",
    outputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610190908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c63570e1a361461002857600080fd5b3461009e57602036600319011261009e5760043567ffffffffffffffff9182821161009e573660238301121561009e57816004013592831161009e57366024848401011161009e5761009a61008084602485016100b8565b6040516001600160a01b0390911681529081906020820190565b0390f35b80fd5b50634e487b7160e01b600052604160045260246000fd5b908060141161013b5767ffffffffffffffff91601319820183811161014d575b60405193600b8401601f19908116603f0116850190811185821017610140575b6040528084526020840190368484011161013b576020946000600c819682946014880187378301015251923560601c5af190600051911561013557565b60009150565b600080fd5b6101486100a1565b6100f8565b6101556100a1565b6100d856fea2646970667358221220aaf5ed5cbd476151c220422c4b8c7bdf3e1df8969310c66ab9dc05325dad93a764736f6c634300080f0033";

type SenderCreatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SenderCreatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SenderCreator__factory extends ContractFactory {
  constructor(...args: SenderCreatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SenderCreator> {
    return super.deploy(overrides || {}) as Promise<SenderCreator>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SenderCreator {
    return super.attach(address) as SenderCreator;
  }
  override connect(signer: Signer): SenderCreator__factory {
    return super.connect(signer) as SenderCreator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SenderCreatorInterface {
    return new utils.Interface(_abi) as SenderCreatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SenderCreator {
    return new Contract(address, _abi, signerOrProvider) as SenderCreator;
  }
}
