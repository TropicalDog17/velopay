/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { CreateCall, CreateCallInterface } from "../CreateCall";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newContract",
        type: "address",
      },
    ],
    name: "ContractCreation",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "deploymentData",
        type: "bytes",
      },
    ],
    name: "performCreate",
    outputs: [
      {
        internalType: "address",
        name: "newContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "deploymentData",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "performCreate2",
    outputs: [
      {
        internalType: "address",
        name: "newContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610275908161001c8239f35b600080fdfe60806040526004361015610013575b600080fd5b6000803560e01c9081634847be6f1461003e5750634c8c9ea11461003657600080fd5b61000e610175565b346100dc5760603660031901126100dc576024359067ffffffffffffffff82116100dc576100d861007236600485016100f6565b805160443591602001600435f57f4db17dd5e4732fb6da34a148104a592783ca119a1e7bb8829eba6cbadef0b51160206001600160a01b0383166100b78115156101f7565b604051908152a16040516001600160a01b0390911681529081906020820190565b0390f35b80fd5b50634e487b7160e01b600052604160045260246000fd5b81601f8201121561000e5780359067ffffffffffffffff92838311610168575b60405193601f8401601f19908116603f011685019081118582101761015b575b6040528284526020838301011161000e57816000926020809301838601378301015290565b6101636100df565b610136565b6101706100df565b610116565b503461000e57604036600319011261000e5760243567ffffffffffffffff811161000e576101a960209136906004016100f6565b80516001600160a01b03918301600435f0166101c68115156101f7565b7f4db17dd5e4732fb6da34a148104a592783ca119a1e7bb8829eba6cbadef0b51182604051838152a1604051908152f35b156101fe57565b60405162461bcd60e51b815260206004820152601960248201527810dbdd5b19081b9bdd0819195c1b1bde4818dbdb9d1c9858dd603a1b6044820152606490fdfea264697066735822122087de358a922f87e8b443a5d2d19a65d130fcbebd5321389bde1f5e7060ea83b064736f6c634300080f0033";

type CreateCallConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CreateCallConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CreateCall__factory extends ContractFactory {
  constructor(...args: CreateCallConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CreateCall> {
    return super.deploy(overrides || {}) as Promise<CreateCall>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CreateCall {
    return super.attach(address) as CreateCall;
  }
  override connect(signer: Signer): CreateCall__factory {
    return super.connect(signer) as CreateCall__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CreateCallInterface {
    return new utils.Interface(_abi) as CreateCallInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CreateCall {
    return new Contract(address, _abi, signerOrProvider) as CreateCall;
  }
}
